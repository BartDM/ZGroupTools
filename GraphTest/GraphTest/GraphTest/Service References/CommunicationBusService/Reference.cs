//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GraphTest.CommunicationBusService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="CommunicationBusService.ICommunicationBusWcfService", CallbackContract=typeof(GraphTest.CommunicationBusService.ICommunicationBusWcfServiceCallback))]
    public interface ICommunicationBusWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/AddSet", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/AddSetResponse")]
        void AddSet(long setId, long clientId, int screenId, int slotId, bool hasPeopleInsideControl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/AddSet", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/AddSetResponse")]
        System.IAsyncResult BeginAddSet(long setId, long clientId, int screenId, int slotId, bool hasPeopleInsideControl, System.AsyncCallback callback, object asyncState);
        
        void EndAddSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RemoveSet", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RemoveSetRespon" +
            "se")]
        void RemoveSet(long setId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RemoveSet", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RemoveSetRespon" +
            "se")]
        System.IAsyncResult BeginRemoveSet(long setId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/Reset", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/ResetResponse")]
        void Reset();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/Reset", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/ResetResponse")]
        System.IAsyncResult BeginReset(System.AsyncCallback callback, object asyncState);
        
        void EndReset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RegisterClient", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RegisterClientR" +
            "esponse")]
        long RegisterClient(string ipAddress, string machineName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RegisterClient", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RegisterClientR" +
            "esponse")]
        System.IAsyncResult BeginRegisterClient(string ipAddress, string machineName, System.AsyncCallback callback, object asyncState);
        
        long EndRegisterClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/UnRegisterClien" +
            "t", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/UnRegisterClien" +
            "tResponse")]
        bool UnRegisterClient(string machineName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/UnRegisterClien" +
            "t", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/UnRegisterClien" +
            "tResponse")]
        System.IAsyncResult BeginUnRegisterClient(string machineName, System.AsyncCallback callback, object asyncState);
        
        bool EndUnRegisterClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/TestService", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/TestServiceResp" +
            "onse")]
        int TestService(int int1, int int2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/TestService", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/TestServiceResp" +
            "onse")]
        System.IAsyncResult BeginTestService(int int1, int int2, System.AsyncCallback callback, object asyncState);
        
        int EndTestService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/DetectSets", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/DetectSetsRespo" +
            "nse")]
        ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[] DetectSets();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/DetectSets", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/DetectSetsRespo" +
            "nse")]
        System.IAsyncResult BeginDetectSets(System.AsyncCallback callback, object asyncState);
        
        ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[] EndDetectSets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/SaveSets", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/SaveSetsRespons" +
            "e")]
        void SaveSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.SavedSet[] sets);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/SaveSets", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/SaveSetsRespons" +
            "e")]
        System.IAsyncResult BeginSaveSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.SavedSet[] sets, System.AsyncCallback callback, object asyncState);
        
        void EndSaveSets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/PositionSets", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/PositionSetsRes" +
            "ponse")]
        void PositionSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.ClientSet[] sets, long clientId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/PositionSets", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/PositionSetsRes" +
            "ponse")]
        System.IAsyncResult BeginPositionSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.ClientSet[] sets, long clientId, System.AsyncCallback callback, object asyncState);
        
        void EndPositionSets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetNotConfigure" +
            "dSets", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetNotConfigure" +
            "dSetsResponse")]
        ZGroup.MonitoringSuite.BDO.Client.Set[] GetNotConfiguredSets();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetNotConfigure" +
            "dSets", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetNotConfigure" +
            "dSetsResponse")]
        System.IAsyncResult BeginGetNotConfiguredSets(System.AsyncCallback callback, object asyncState);
        
        ZGroup.MonitoringSuite.BDO.Client.Set[] EndGetNotConfiguredSets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetSetsForClien" +
            "tId", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetSetsForClien" +
            "tIdResponse")]
        ZGroup.MonitoringSuite.BDO.Client.Set[] GetSetsForClientId(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetSetsForClien" +
            "tId", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetSetsForClien" +
            "tIdResponse")]
        System.IAsyncResult BeginGetSetsForClientId(int clientId, System.AsyncCallback callback, object asyncState);
        
        ZGroup.MonitoringSuite.BDO.Client.Set[] EndGetSetsForClientId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetSetsForPaxto" +
            "nReader", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetSetsForPaxto" +
            "nReaderResponse")]
        System.Collections.Generic.Dictionary<long, ZGroup.MonitoringSuite.BDO.Services.PaxtonReader.Set[]> GetSetsForPaxtonReader();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetSetsForPaxto" +
            "nReader", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetSetsForPaxto" +
            "nReaderResponse")]
        System.IAsyncResult BeginGetSetsForPaxtonReader(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<long, ZGroup.MonitoringSuite.BDO.Services.PaxtonReader.Set[]> EndGetSetsForPaxtonReader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetGraphMeasure" +
            "mentsForSet", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetGraphMeasure" +
            "mentsForSetResponse")]
        ZGroup.MonitoringSuite.BDO.Client.GraphMeasurementResult GetGraphMeasurementsForSet(long setId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetGraphMeasure" +
            "mentsForSet", ReplyAction="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/GetGraphMeasure" +
            "mentsForSetResponse")]
        System.IAsyncResult BeginGetGraphMeasurementsForSet(long setId, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        ZGroup.MonitoringSuite.BDO.Client.GraphMeasurementResult EndGetGraphMeasurementsForSet(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommunicationBusWcfServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/ReportProgress")]
        void ReportProgress(decimal progress);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/ReportProgress")]
        System.IAsyncResult BeginReportProgress(decimal progress, System.AsyncCallback callback, object asyncState);
        
        void EndReportProgress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RespondToDetect" +
            "Sets")]
        void RespondToDetectSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[] sets);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://Microsoft.ServiceModel.Samples/ICommunicationBusWcfService/RespondToDetect" +
            "Sets")]
        System.IAsyncResult BeginRespondToDetectSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[] sets, System.AsyncCallback callback, object asyncState);
        
        void EndRespondToDetectSets(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommunicationBusWcfServiceChannel : GraphTest.CommunicationBusService.ICommunicationBusWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnRegisterClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnRegisterClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DetectSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DetectSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNotConfiguredSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNotConfiguredSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ZGroup.MonitoringSuite.BDO.Client.Set[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ZGroup.MonitoringSuite.BDO.Client.Set[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSetsForClientIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSetsForClientIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ZGroup.MonitoringSuite.BDO.Client.Set[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ZGroup.MonitoringSuite.BDO.Client.Set[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSetsForPaxtonReaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSetsForPaxtonReaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<long, ZGroup.MonitoringSuite.BDO.Services.PaxtonReader.Set[]> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<long, ZGroup.MonitoringSuite.BDO.Services.PaxtonReader.Set[]>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGraphMeasurementsForSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGraphMeasurementsForSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ZGroup.MonitoringSuite.BDO.Client.GraphMeasurementResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ZGroup.MonitoringSuite.BDO.Client.GraphMeasurementResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommunicationBusWcfServiceClient : System.ServiceModel.DuplexClientBase<GraphTest.CommunicationBusService.ICommunicationBusWcfService>, GraphTest.CommunicationBusService.ICommunicationBusWcfService {
        
        private BeginOperationDelegate onBeginAddSetDelegate;
        
        private EndOperationDelegate onEndAddSetDelegate;
        
        private System.Threading.SendOrPostCallback onAddSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveSetDelegate;
        
        private EndOperationDelegate onEndRemoveSetDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetDelegate;
        
        private EndOperationDelegate onEndResetDelegate;
        
        private System.Threading.SendOrPostCallback onResetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterClientDelegate;
        
        private EndOperationDelegate onEndRegisterClientDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnRegisterClientDelegate;
        
        private EndOperationDelegate onEndUnRegisterClientDelegate;
        
        private System.Threading.SendOrPostCallback onUnRegisterClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestServiceDelegate;
        
        private EndOperationDelegate onEndTestServiceDelegate;
        
        private System.Threading.SendOrPostCallback onTestServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDetectSetsDelegate;
        
        private EndOperationDelegate onEndDetectSetsDelegate;
        
        private System.Threading.SendOrPostCallback onDetectSetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveSetsDelegate;
        
        private EndOperationDelegate onEndSaveSetsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveSetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPositionSetsDelegate;
        
        private EndOperationDelegate onEndPositionSetsDelegate;
        
        private System.Threading.SendOrPostCallback onPositionSetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNotConfiguredSetsDelegate;
        
        private EndOperationDelegate onEndGetNotConfiguredSetsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNotConfiguredSetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSetsForClientIdDelegate;
        
        private EndOperationDelegate onEndGetSetsForClientIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetSetsForClientIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSetsForPaxtonReaderDelegate;
        
        private EndOperationDelegate onEndGetSetsForPaxtonReaderDelegate;
        
        private System.Threading.SendOrPostCallback onGetSetsForPaxtonReaderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGraphMeasurementsForSetDelegate;
        
        private EndOperationDelegate onEndGetGraphMeasurementsForSetDelegate;
        
        private System.Threading.SendOrPostCallback onGetGraphMeasurementsForSetCompletedDelegate;
        
        public CommunicationBusWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CommunicationBusWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CommunicationBusWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommunicationBusWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommunicationBusWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResetCompleted;
        
        public event System.EventHandler<RegisterClientCompletedEventArgs> RegisterClientCompleted;
        
        public event System.EventHandler<UnRegisterClientCompletedEventArgs> UnRegisterClientCompleted;
        
        public event System.EventHandler<TestServiceCompletedEventArgs> TestServiceCompleted;
        
        public event System.EventHandler<DetectSetsCompletedEventArgs> DetectSetsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveSetsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PositionSetsCompleted;
        
        public event System.EventHandler<GetNotConfiguredSetsCompletedEventArgs> GetNotConfiguredSetsCompleted;
        
        public event System.EventHandler<GetSetsForClientIdCompletedEventArgs> GetSetsForClientIdCompleted;
        
        public event System.EventHandler<GetSetsForPaxtonReaderCompletedEventArgs> GetSetsForPaxtonReaderCompleted;
        
        public event System.EventHandler<GetGraphMeasurementsForSetCompletedEventArgs> GetGraphMeasurementsForSetCompleted;
        
        public void AddSet(long setId, long clientId, int screenId, int slotId, bool hasPeopleInsideControl) {
            base.Channel.AddSet(setId, clientId, screenId, slotId, hasPeopleInsideControl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddSet(long setId, long clientId, int screenId, int slotId, bool hasPeopleInsideControl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSet(setId, clientId, screenId, slotId, hasPeopleInsideControl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddSet(System.IAsyncResult result) {
            base.Channel.EndAddSet(result);
        }
        
        private System.IAsyncResult OnBeginAddSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long setId = ((long)(inValues[0]));
            long clientId = ((long)(inValues[1]));
            int screenId = ((int)(inValues[2]));
            int slotId = ((int)(inValues[3]));
            bool hasPeopleInsideControl = ((bool)(inValues[4]));
            return this.BeginAddSet(setId, clientId, screenId, slotId, hasPeopleInsideControl, callback, asyncState);
        }
        
        private object[] OnEndAddSet(System.IAsyncResult result) {
            this.EndAddSet(result);
            return null;
        }
        
        private void OnAddSetCompleted(object state) {
            if ((this.AddSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSetAsync(long setId, long clientId, int screenId, int slotId, bool hasPeopleInsideControl) {
            this.AddSetAsync(setId, clientId, screenId, slotId, hasPeopleInsideControl, null);
        }
        
        public void AddSetAsync(long setId, long clientId, int screenId, int slotId, bool hasPeopleInsideControl, object userState) {
            if ((this.onBeginAddSetDelegate == null)) {
                this.onBeginAddSetDelegate = new BeginOperationDelegate(this.OnBeginAddSet);
            }
            if ((this.onEndAddSetDelegate == null)) {
                this.onEndAddSetDelegate = new EndOperationDelegate(this.OnEndAddSet);
            }
            if ((this.onAddSetCompletedDelegate == null)) {
                this.onAddSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSetCompleted);
            }
            base.InvokeAsync(this.onBeginAddSetDelegate, new object[] {
                        setId,
                        clientId,
                        screenId,
                        slotId,
                        hasPeopleInsideControl}, this.onEndAddSetDelegate, this.onAddSetCompletedDelegate, userState);
        }
        
        public void RemoveSet(long setId) {
            base.Channel.RemoveSet(setId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveSet(long setId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveSet(setId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveSet(System.IAsyncResult result) {
            base.Channel.EndRemoveSet(result);
        }
        
        private System.IAsyncResult OnBeginRemoveSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long setId = ((long)(inValues[0]));
            return this.BeginRemoveSet(setId, callback, asyncState);
        }
        
        private object[] OnEndRemoveSet(System.IAsyncResult result) {
            this.EndRemoveSet(result);
            return null;
        }
        
        private void OnRemoveSetCompleted(object state) {
            if ((this.RemoveSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveSetAsync(long setId) {
            this.RemoveSetAsync(setId, null);
        }
        
        public void RemoveSetAsync(long setId, object userState) {
            if ((this.onBeginRemoveSetDelegate == null)) {
                this.onBeginRemoveSetDelegate = new BeginOperationDelegate(this.OnBeginRemoveSet);
            }
            if ((this.onEndRemoveSetDelegate == null)) {
                this.onEndRemoveSetDelegate = new EndOperationDelegate(this.OnEndRemoveSet);
            }
            if ((this.onRemoveSetCompletedDelegate == null)) {
                this.onRemoveSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveSetCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveSetDelegate, new object[] {
                        setId}, this.onEndRemoveSetDelegate, this.onRemoveSetCompletedDelegate, userState);
        }
        
        public void Reset() {
            base.Channel.Reset();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReset(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReset(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReset(System.IAsyncResult result) {
            base.Channel.EndReset(result);
        }
        
        private System.IAsyncResult OnBeginReset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginReset(callback, asyncState);
        }
        
        private object[] OnEndReset(System.IAsyncResult result) {
            this.EndReset(result);
            return null;
        }
        
        private void OnResetCompleted(object state) {
            if ((this.ResetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetAsync() {
            this.ResetAsync(null);
        }
        
        public void ResetAsync(object userState) {
            if ((this.onBeginResetDelegate == null)) {
                this.onBeginResetDelegate = new BeginOperationDelegate(this.OnBeginReset);
            }
            if ((this.onEndResetDelegate == null)) {
                this.onEndResetDelegate = new EndOperationDelegate(this.OnEndReset);
            }
            if ((this.onResetCompletedDelegate == null)) {
                this.onResetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetCompleted);
            }
            base.InvokeAsync(this.onBeginResetDelegate, null, this.onEndResetDelegate, this.onResetCompletedDelegate, userState);
        }
        
        public long RegisterClient(string ipAddress, string machineName) {
            return base.Channel.RegisterClient(ipAddress, machineName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterClient(string ipAddress, string machineName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterClient(ipAddress, machineName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndRegisterClient(System.IAsyncResult result) {
            return base.Channel.EndRegisterClient(result);
        }
        
        private System.IAsyncResult OnBeginRegisterClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ipAddress = ((string)(inValues[0]));
            string machineName = ((string)(inValues[1]));
            return this.BeginRegisterClient(ipAddress, machineName, callback, asyncState);
        }
        
        private object[] OnEndRegisterClient(System.IAsyncResult result) {
            long retVal = this.EndRegisterClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterClientCompleted(object state) {
            if ((this.RegisterClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterClientCompleted(this, new RegisterClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterClientAsync(string ipAddress, string machineName) {
            this.RegisterClientAsync(ipAddress, machineName, null);
        }
        
        public void RegisterClientAsync(string ipAddress, string machineName, object userState) {
            if ((this.onBeginRegisterClientDelegate == null)) {
                this.onBeginRegisterClientDelegate = new BeginOperationDelegate(this.OnBeginRegisterClient);
            }
            if ((this.onEndRegisterClientDelegate == null)) {
                this.onEndRegisterClientDelegate = new EndOperationDelegate(this.OnEndRegisterClient);
            }
            if ((this.onRegisterClientCompletedDelegate == null)) {
                this.onRegisterClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterClientCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterClientDelegate, new object[] {
                        ipAddress,
                        machineName}, this.onEndRegisterClientDelegate, this.onRegisterClientCompletedDelegate, userState);
        }
        
        public bool UnRegisterClient(string machineName) {
            return base.Channel.UnRegisterClient(machineName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnRegisterClient(string machineName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnRegisterClient(machineName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUnRegisterClient(System.IAsyncResult result) {
            return base.Channel.EndUnRegisterClient(result);
        }
        
        private System.IAsyncResult OnBeginUnRegisterClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string machineName = ((string)(inValues[0]));
            return this.BeginUnRegisterClient(machineName, callback, asyncState);
        }
        
        private object[] OnEndUnRegisterClient(System.IAsyncResult result) {
            bool retVal = this.EndUnRegisterClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnRegisterClientCompleted(object state) {
            if ((this.UnRegisterClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnRegisterClientCompleted(this, new UnRegisterClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnRegisterClientAsync(string machineName) {
            this.UnRegisterClientAsync(machineName, null);
        }
        
        public void UnRegisterClientAsync(string machineName, object userState) {
            if ((this.onBeginUnRegisterClientDelegate == null)) {
                this.onBeginUnRegisterClientDelegate = new BeginOperationDelegate(this.OnBeginUnRegisterClient);
            }
            if ((this.onEndUnRegisterClientDelegate == null)) {
                this.onEndUnRegisterClientDelegate = new EndOperationDelegate(this.OnEndUnRegisterClient);
            }
            if ((this.onUnRegisterClientCompletedDelegate == null)) {
                this.onUnRegisterClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnRegisterClientCompleted);
            }
            base.InvokeAsync(this.onBeginUnRegisterClientDelegate, new object[] {
                        machineName}, this.onEndUnRegisterClientDelegate, this.onUnRegisterClientCompletedDelegate, userState);
        }
        
        public int TestService(int int1, int int2) {
            return base.Channel.TestService(int1, int2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestService(int int1, int int2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestService(int1, int2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndTestService(System.IAsyncResult result) {
            return base.Channel.EndTestService(result);
        }
        
        private System.IAsyncResult OnBeginTestService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int int1 = ((int)(inValues[0]));
            int int2 = ((int)(inValues[1]));
            return this.BeginTestService(int1, int2, callback, asyncState);
        }
        
        private object[] OnEndTestService(System.IAsyncResult result) {
            int retVal = this.EndTestService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestServiceCompleted(object state) {
            if ((this.TestServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestServiceCompleted(this, new TestServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestServiceAsync(int int1, int int2) {
            this.TestServiceAsync(int1, int2, null);
        }
        
        public void TestServiceAsync(int int1, int int2, object userState) {
            if ((this.onBeginTestServiceDelegate == null)) {
                this.onBeginTestServiceDelegate = new BeginOperationDelegate(this.OnBeginTestService);
            }
            if ((this.onEndTestServiceDelegate == null)) {
                this.onEndTestServiceDelegate = new EndOperationDelegate(this.OnEndTestService);
            }
            if ((this.onTestServiceCompletedDelegate == null)) {
                this.onTestServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestServiceCompleted);
            }
            base.InvokeAsync(this.onBeginTestServiceDelegate, new object[] {
                        int1,
                        int2}, this.onEndTestServiceDelegate, this.onTestServiceCompletedDelegate, userState);
        }
        
        public ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[] DetectSets() {
            return base.Channel.DetectSets();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDetectSets(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDetectSets(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[] EndDetectSets(System.IAsyncResult result) {
            return base.Channel.EndDetectSets(result);
        }
        
        private System.IAsyncResult OnBeginDetectSets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDetectSets(callback, asyncState);
        }
        
        private object[] OnEndDetectSets(System.IAsyncResult result) {
            ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.DetectedSet[] retVal = this.EndDetectSets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDetectSetsCompleted(object state) {
            if ((this.DetectSetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DetectSetsCompleted(this, new DetectSetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DetectSetsAsync() {
            this.DetectSetsAsync(null);
        }
        
        public void DetectSetsAsync(object userState) {
            if ((this.onBeginDetectSetsDelegate == null)) {
                this.onBeginDetectSetsDelegate = new BeginOperationDelegate(this.OnBeginDetectSets);
            }
            if ((this.onEndDetectSetsDelegate == null)) {
                this.onEndDetectSetsDelegate = new EndOperationDelegate(this.OnEndDetectSets);
            }
            if ((this.onDetectSetsCompletedDelegate == null)) {
                this.onDetectSetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDetectSetsCompleted);
            }
            base.InvokeAsync(this.onBeginDetectSetsDelegate, null, this.onEndDetectSetsDelegate, this.onDetectSetsCompletedDelegate, userState);
        }
        
        public void SaveSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.SavedSet[] sets) {
            base.Channel.SaveSets(sets);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.SavedSet[] sets, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveSets(sets, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveSets(System.IAsyncResult result) {
            base.Channel.EndSaveSets(result);
        }
        
        private System.IAsyncResult OnBeginSaveSets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.SavedSet[] sets = ((ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.SavedSet[])(inValues[0]));
            return this.BeginSaveSets(sets, callback, asyncState);
        }
        
        private object[] OnEndSaveSets(System.IAsyncResult result) {
            this.EndSaveSets(result);
            return null;
        }
        
        private void OnSaveSetsCompleted(object state) {
            if ((this.SaveSetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveSetsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveSetsAsync(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.SavedSet[] sets) {
            this.SaveSetsAsync(sets, null);
        }
        
        public void SaveSetsAsync(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.SavedSet[] sets, object userState) {
            if ((this.onBeginSaveSetsDelegate == null)) {
                this.onBeginSaveSetsDelegate = new BeginOperationDelegate(this.OnBeginSaveSets);
            }
            if ((this.onEndSaveSetsDelegate == null)) {
                this.onEndSaveSetsDelegate = new EndOperationDelegate(this.OnEndSaveSets);
            }
            if ((this.onSaveSetsCompletedDelegate == null)) {
                this.onSaveSetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveSetsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveSetsDelegate, new object[] {
                        sets}, this.onEndSaveSetsDelegate, this.onSaveSetsCompletedDelegate, userState);
        }
        
        public void PositionSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.ClientSet[] sets, long clientId) {
            base.Channel.PositionSets(sets, clientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPositionSets(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.ClientSet[] sets, long clientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPositionSets(sets, clientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPositionSets(System.IAsyncResult result) {
            base.Channel.EndPositionSets(result);
        }
        
        private System.IAsyncResult OnBeginPositionSets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.ClientSet[] sets = ((ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.ClientSet[])(inValues[0]));
            long clientId = ((long)(inValues[1]));
            return this.BeginPositionSets(sets, clientId, callback, asyncState);
        }
        
        private object[] OnEndPositionSets(System.IAsyncResult result) {
            this.EndPositionSets(result);
            return null;
        }
        
        private void OnPositionSetsCompleted(object state) {
            if ((this.PositionSetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PositionSetsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PositionSetsAsync(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.ClientSet[] sets, long clientId) {
            this.PositionSetsAsync(sets, clientId, null);
        }
        
        public void PositionSetsAsync(ZGroup.MonitoringSuite.BDO.Services.CommunicationBus.ClientSet[] sets, long clientId, object userState) {
            if ((this.onBeginPositionSetsDelegate == null)) {
                this.onBeginPositionSetsDelegate = new BeginOperationDelegate(this.OnBeginPositionSets);
            }
            if ((this.onEndPositionSetsDelegate == null)) {
                this.onEndPositionSetsDelegate = new EndOperationDelegate(this.OnEndPositionSets);
            }
            if ((this.onPositionSetsCompletedDelegate == null)) {
                this.onPositionSetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPositionSetsCompleted);
            }
            base.InvokeAsync(this.onBeginPositionSetsDelegate, new object[] {
                        sets,
                        clientId}, this.onEndPositionSetsDelegate, this.onPositionSetsCompletedDelegate, userState);
        }
        
        public ZGroup.MonitoringSuite.BDO.Client.Set[] GetNotConfiguredSets() {
            return base.Channel.GetNotConfiguredSets();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNotConfiguredSets(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNotConfiguredSets(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ZGroup.MonitoringSuite.BDO.Client.Set[] EndGetNotConfiguredSets(System.IAsyncResult result) {
            return base.Channel.EndGetNotConfiguredSets(result);
        }
        
        private System.IAsyncResult OnBeginGetNotConfiguredSets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNotConfiguredSets(callback, asyncState);
        }
        
        private object[] OnEndGetNotConfiguredSets(System.IAsyncResult result) {
            ZGroup.MonitoringSuite.BDO.Client.Set[] retVal = this.EndGetNotConfiguredSets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNotConfiguredSetsCompleted(object state) {
            if ((this.GetNotConfiguredSetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNotConfiguredSetsCompleted(this, new GetNotConfiguredSetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNotConfiguredSetsAsync() {
            this.GetNotConfiguredSetsAsync(null);
        }
        
        public void GetNotConfiguredSetsAsync(object userState) {
            if ((this.onBeginGetNotConfiguredSetsDelegate == null)) {
                this.onBeginGetNotConfiguredSetsDelegate = new BeginOperationDelegate(this.OnBeginGetNotConfiguredSets);
            }
            if ((this.onEndGetNotConfiguredSetsDelegate == null)) {
                this.onEndGetNotConfiguredSetsDelegate = new EndOperationDelegate(this.OnEndGetNotConfiguredSets);
            }
            if ((this.onGetNotConfiguredSetsCompletedDelegate == null)) {
                this.onGetNotConfiguredSetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNotConfiguredSetsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNotConfiguredSetsDelegate, null, this.onEndGetNotConfiguredSetsDelegate, this.onGetNotConfiguredSetsCompletedDelegate, userState);
        }
        
        public ZGroup.MonitoringSuite.BDO.Client.Set[] GetSetsForClientId(int clientId) {
            return base.Channel.GetSetsForClientId(clientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSetsForClientId(int clientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSetsForClientId(clientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ZGroup.MonitoringSuite.BDO.Client.Set[] EndGetSetsForClientId(System.IAsyncResult result) {
            return base.Channel.EndGetSetsForClientId(result);
        }
        
        private System.IAsyncResult OnBeginGetSetsForClientId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int clientId = ((int)(inValues[0]));
            return this.BeginGetSetsForClientId(clientId, callback, asyncState);
        }
        
        private object[] OnEndGetSetsForClientId(System.IAsyncResult result) {
            ZGroup.MonitoringSuite.BDO.Client.Set[] retVal = this.EndGetSetsForClientId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSetsForClientIdCompleted(object state) {
            if ((this.GetSetsForClientIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSetsForClientIdCompleted(this, new GetSetsForClientIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSetsForClientIdAsync(int clientId) {
            this.GetSetsForClientIdAsync(clientId, null);
        }
        
        public void GetSetsForClientIdAsync(int clientId, object userState) {
            if ((this.onBeginGetSetsForClientIdDelegate == null)) {
                this.onBeginGetSetsForClientIdDelegate = new BeginOperationDelegate(this.OnBeginGetSetsForClientId);
            }
            if ((this.onEndGetSetsForClientIdDelegate == null)) {
                this.onEndGetSetsForClientIdDelegate = new EndOperationDelegate(this.OnEndGetSetsForClientId);
            }
            if ((this.onGetSetsForClientIdCompletedDelegate == null)) {
                this.onGetSetsForClientIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSetsForClientIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetSetsForClientIdDelegate, new object[] {
                        clientId}, this.onEndGetSetsForClientIdDelegate, this.onGetSetsForClientIdCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<long, ZGroup.MonitoringSuite.BDO.Services.PaxtonReader.Set[]> GetSetsForPaxtonReader() {
            return base.Channel.GetSetsForPaxtonReader();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSetsForPaxtonReader(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSetsForPaxtonReader(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<long, ZGroup.MonitoringSuite.BDO.Services.PaxtonReader.Set[]> EndGetSetsForPaxtonReader(System.IAsyncResult result) {
            return base.Channel.EndGetSetsForPaxtonReader(result);
        }
        
        private System.IAsyncResult OnBeginGetSetsForPaxtonReader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSetsForPaxtonReader(callback, asyncState);
        }
        
        private object[] OnEndGetSetsForPaxtonReader(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<long, ZGroup.MonitoringSuite.BDO.Services.PaxtonReader.Set[]> retVal = this.EndGetSetsForPaxtonReader(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSetsForPaxtonReaderCompleted(object state) {
            if ((this.GetSetsForPaxtonReaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSetsForPaxtonReaderCompleted(this, new GetSetsForPaxtonReaderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSetsForPaxtonReaderAsync() {
            this.GetSetsForPaxtonReaderAsync(null);
        }
        
        public void GetSetsForPaxtonReaderAsync(object userState) {
            if ((this.onBeginGetSetsForPaxtonReaderDelegate == null)) {
                this.onBeginGetSetsForPaxtonReaderDelegate = new BeginOperationDelegate(this.OnBeginGetSetsForPaxtonReader);
            }
            if ((this.onEndGetSetsForPaxtonReaderDelegate == null)) {
                this.onEndGetSetsForPaxtonReaderDelegate = new EndOperationDelegate(this.OnEndGetSetsForPaxtonReader);
            }
            if ((this.onGetSetsForPaxtonReaderCompletedDelegate == null)) {
                this.onGetSetsForPaxtonReaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSetsForPaxtonReaderCompleted);
            }
            base.InvokeAsync(this.onBeginGetSetsForPaxtonReaderDelegate, null, this.onEndGetSetsForPaxtonReaderDelegate, this.onGetSetsForPaxtonReaderCompletedDelegate, userState);
        }
        
        public ZGroup.MonitoringSuite.BDO.Client.GraphMeasurementResult GetGraphMeasurementsForSet(long setId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetGraphMeasurementsForSet(setId, startDate, endDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGraphMeasurementsForSet(long setId, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGraphMeasurementsForSet(setId, startDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ZGroup.MonitoringSuite.BDO.Client.GraphMeasurementResult EndGetGraphMeasurementsForSet(System.IAsyncResult result) {
            return base.Channel.EndGetGraphMeasurementsForSet(result);
        }
        
        private System.IAsyncResult OnBeginGetGraphMeasurementsForSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long setId = ((long)(inValues[0]));
            System.DateTime startDate = ((System.DateTime)(inValues[1]));
            System.DateTime endDate = ((System.DateTime)(inValues[2]));
            return this.BeginGetGraphMeasurementsForSet(setId, startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetGraphMeasurementsForSet(System.IAsyncResult result) {
            ZGroup.MonitoringSuite.BDO.Client.GraphMeasurementResult retVal = this.EndGetGraphMeasurementsForSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGraphMeasurementsForSetCompleted(object state) {
            if ((this.GetGraphMeasurementsForSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGraphMeasurementsForSetCompleted(this, new GetGraphMeasurementsForSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGraphMeasurementsForSetAsync(long setId, System.DateTime startDate, System.DateTime endDate) {
            this.GetGraphMeasurementsForSetAsync(setId, startDate, endDate, null);
        }
        
        public void GetGraphMeasurementsForSetAsync(long setId, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetGraphMeasurementsForSetDelegate == null)) {
                this.onBeginGetGraphMeasurementsForSetDelegate = new BeginOperationDelegate(this.OnBeginGetGraphMeasurementsForSet);
            }
            if ((this.onEndGetGraphMeasurementsForSetDelegate == null)) {
                this.onEndGetGraphMeasurementsForSetDelegate = new EndOperationDelegate(this.OnEndGetGraphMeasurementsForSet);
            }
            if ((this.onGetGraphMeasurementsForSetCompletedDelegate == null)) {
                this.onGetGraphMeasurementsForSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGraphMeasurementsForSetCompleted);
            }
            base.InvokeAsync(this.onBeginGetGraphMeasurementsForSetDelegate, new object[] {
                        setId,
                        startDate,
                        endDate}, this.onEndGetGraphMeasurementsForSetDelegate, this.onGetGraphMeasurementsForSetCompletedDelegate, userState);
        }
    }
}
